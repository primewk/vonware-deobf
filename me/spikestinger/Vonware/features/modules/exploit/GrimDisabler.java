package me.spikestinger.Vonware.features.modules.exploit;

import me.spikestinger.Vonware.features.modules.Module;
import me.spikestinger.Vonware.features.settings.Setting;
import me.spikestinger.Vonware.manager.InventoryManager;
import me.spikestinger.Vonware.manager.NetworkManager;
import net.minecraft.class_1268;
import net.minecraft.class_1770;
import net.minecraft.class_1781;
import net.minecraft.class_1792;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_2561;
import net.minecraft.class_2596;
import net.minecraft.class_2848;
import net.minecraft.class_2886;
import net.minecraft.class_7204;
import net.minecraft.class_2848.class_2849;

public class GrimDisabler extends Module {
   public final Setting<Integer> rocketDelay = this.register(new Setting("Rocket Interval", 3, 0, 60));
   public final Setting<Integer> glideDelay = this.register(new Setting("Glide Delay", 2, 1, 10));
   public final Setting<Boolean> inElytra = this.register(new Setting("In Elytra", false));
   public final Setting<Boolean> autoDisable = this.register(new Setting("AutoDisable", true));
   private static int delayTimer;
   private static int stepTimer;
   private static boolean shouldSwap;
   private static int disableStage = 0;
   private static boolean inHotbar;

   public GrimDisabler() {
      super("GrimDishazeler", "Disables Grim using fireworks", Module.Category.EXPLOIT, true, false, true);
   }

   public void onEnable() {
      delayTimer = (Integer)this.rocketDelay.getValue() * 20;
      stepTimer = 0;
      disableStage = 0;
   }

   public void onUpdate() {
      assert mc.field_1724 != null;

      int delayTicks = (Integer)this.rocketDelay.getValue() * 20;
      if (delayTimer >= delayTicks) {
         switch(disableStage) {
         case 0:
            if (!(mc.field_1724.method_31548().method_7372(2).method_7909() instanceof class_1770)) {
               this.swapChest(class_1802.field_8833);
               shouldSwap = true;
               mc.field_1724.method_6043();
            } else {
               if (!(Boolean)this.inElytra.getValue()) {
                  stepTimer = 0;
                  disableStage = 0;
                  class_2561 text = class_2561.method_43470("*In Elytra, cancelling Disabler...");
                  mc.field_1705.method_1743().method_1812(text);
                  this.toggle();
                  return;
               }

               if (mc.field_1724.method_6128()) {
                  shouldSwap = false;
               } else {
                  shouldSwap = true;
                  mc.field_1724.method_6043();
               }
            }

            disableStage = -1;
            break;
         case 1:
            if (!mc.field_1724.method_6128()) {
               class_2596<?> p = new class_2848(mc.field_1724, class_2849.field_12982);
               NetworkManager.sendPacket(p);
            }

            this.useFirework();
            if (shouldSwap) {
               this.swapChest(class_1802.field_22028);
               delayTimer = 0;
            }

            if ((Boolean)this.autoDisable.getValue()) {
               stepTimer = 0;
               disableStage = 0;
               this.toggle();
               return;
            }
         }

         ++stepTimer;
         if (stepTimer == (Integer)this.glideDelay.getValue()) {
            disableStage = 1;
         }
      } else {
         stepTimer = 0;
         disableStage = 0;
         ++delayTimer;
      }

   }

   public void swapChest(class_1792 chestPiece) {
      int elytraSlot = -1;

      for(int i = 0; i <= 44; ++i) {
         assert mc.field_1724 != null;

         class_1792 item = mc.field_1724.method_31548().method_5438(i).method_7909();
         if (item == chestPiece || chestPiece == class_1802.field_22028 && item == class_1802.field_8058) {
            if (i < 9) {
               inHotbar = true;
            } else {
               inHotbar = false;
            }

            elytraSlot = i;
         }
      }

      if (inHotbar) {
         InventoryManager.setSlot(elytraSlot);
         class_7204 o = (id) -> {
            return new class_2886(class_1268.field_5808, id);
         };
         NetworkManager.sendSequencedPacket(o);
         InventoryManager.syncToClient();
      } else {
         class_1799 elytraStack = mc.field_1724.method_31548().method_7372(2);
         InventoryManager.pickupSlot(elytraSlot);
         boolean rt = !elytraStack.method_7960();
         InventoryManager.pickupSlot(6);
         if (rt) {
            InventoryManager.pickupSlot(elytraSlot);
         }
      }

   }

   public void useFirework() {
      int rocketSlot = -1;

      for(int i = 0; i < 9; ++i) {
         class_1799 rocketStack = mc.field_1724.method_31548().method_5438(i);
         if (rocketStack.method_7909() instanceof class_1781) {
            rocketSlot = i;
            break;
         }
      }

      InventoryManager.setSlot(rocketSlot);
      class_7204 o = (id) -> {
         return new class_2886(class_1268.field_5808, id);
      };
      NetworkManager.sendSequencedPacket(o);
      InventoryManager.syncToClient();
   }
}
